using CMake
using Libdl

QHULL_WRAPPER_FOUND    = true

QHULL_WRAPPER_SOURCES  = joinpath(@__DIR__, "deps", "MiniQhullWrapper")
QHULL_WRAPPER_BUILD    = joinpath(QHULL_WRAPPER_SOURCES, "build")
QHULL_WRAPPER_LIB_DIR  = joinpath(QHULL_WRAPPER_BUILD,"lib")
QHULL_WRAPPER_LIB_NAME = nothing

QHULL_WRAPPER_LIB_PATH    = ""
QHULL_WRAPPER_LIB_NAMES   = ["libMiniQhullWrapper.$(Libdl.dlext)"]

# Check QHULL_WRAPPER_SOURCES dir exists
if isdir(QHULL_WRAPPER_SOURCES)
    @info "MiniQhullWrapper root directory at: $QHULL_WRAPPER_SOURCES"

    # Check QHULL_WRAPPER_BUILD exists
    if isdir(QHULL_WRAPPER_BUILD)
        rm(QHULL_WRAPPER_BUILD, recursive=true)
    end
    mkdir(QHULL_WRAPPER_BUILD)

    # Configure MiniQhullWrapper cmake project
    configure  = run(`$cmake -B $QHULL_WRAPPER_BUILD -S $QHULL_WRAPPER_SOURCES`)
    if configure.exitcode != 0
        @error "MiniQhullWrapper configure step fail with code: $(configure.exitcode)"
    end
    # Configure MiniQhullWrapper cmake project
    build  = run(`$cmake --build $QHULL_WRAPPER_BUILD`)
    if build.exitcode != 0
        @error "MiniQhullWrapper build step fail with code: $(build.exitcode)"
    end
else
    QHULL_WRAPPER_FOUND=false
    QHULL_WRAPPER_SOURCES = ""
end

# Check QHULL_LIB_DIR (.../lib directory) exists
if isdir(QHULL_WRAPPER_LIB_DIR)
    @info "MiniQhullWrapper lib directory found at: $QHULL_WRAPPER_LIB_DIR"
else
    QHULL_WRAPPER_LIB_DIR = ""
    @warn "MiniQhullWrapper lib directory not found: $QHULL_WRAPPER_LIB_DIR"
end

if (QHULL_WRAPPER_LIB_NAME==nothing)
    QHULL_WRAPPER_LIB_NAME=Libdl.find_library(QHULL_WRAPPER_LIB_NAMES, [QHULL_WRAPPER_LIB_DIR])
end

if isempty(QHULL_WRAPPER_LIB_NAME)
    QHULL_WRAPPER_FOUND = false
    @warn "MiniQhullWrapper library not found: $QHULL_WRAPPER_LIB_NAMES"
else
    QHULL_WRAPPER_LIB_PATH=Libdl.dlpath(QHULL_WRAPPER_LIB_NAME)
    @info "MiniQhullWrapper library found: $QHULL_WRAPPER_LIB_NAMES"
end



# Write QHULL configuration to deps.jl file
deps_jl = "deps.jl"

if isfile(deps_jl)
  rm(deps_jl)
end

open(deps_jl,"w") do f
  println(f, "# This file is automatically generated")
  println(f, "# Do not edit")
  println(f)
  println(f, :(const QHULL_WRAPPER_FOUND    = $QHULL_WRAPPER_FOUND))
  println(f, :(const QHULL_WRAPPER_LIB_DIR  = $QHULL_WRAPPER_LIB_DIR))
  println(f, :(const QHULL_WRAPPER_LIB_NAME = $QHULL_WRAPPER_LIB_NAME))
  println(f, :(const QHULL_WRAPPER_LIB_PATH = $QHULL_WRAPPER_LIB_PATH))
end

@info """
QHULL configuration:
==============================================
  - QHULL_WRAPPER_FOUND    = $QHULL_WRAPPER_FOUND
  - QHULL_WRAPPER_LIB_DIR  = $QHULL_WRAPPER_LIB_DIR
  - QHULL_WRAPPER_LIB_NAME = $QHULL_WRAPPER_LIB_NAME
  - QHULL_WRAPPER_LIB_PATH = $QHULL_WRAPPER_LIB_PATH
"""

